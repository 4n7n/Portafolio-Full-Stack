.scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    z-index: 1000;
    transition: opacity 0.3s ease;
}

.scroll-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, 
        var(--color-primary),
        var(--color-accent),
        var(--color-primary)
    );
    background-size: 200% 100%;
    animation: gradient-shift 3s ease infinite;
    transform-origin: left;
    transition: width 0.1s ease-out;
}

@keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
}

.scroll-progress.hidden {
    opacity: 0;
    pointer-events: none;
}

/* Section Progress Indicators */
.section-progress-indicators {
    position: fixed;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.section-indicator {
    width: 12px;
    height: 12px;
    border: 2px solid var(--color-text-secondary);
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
}

.section-indicator::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    width: 6px;
    height: 6px;
    background: var(--color-primary);
    border-radius: 50%;
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.section-indicator.active {
    border-color: var(--color-primary);
    transform: scale(1.2);
}

.section-indicator.active::before {
    transform: translate(-50%, -50%) scale(1);
}

.section-indicator:hover {
    border-color: var(--color-accent);
    transform: scale(1.3);
}

/* Circular Progress */
.circular-progress {
    position: relative;
    width: 80px;
    height: 80px;
}

.progress-circle {
    width: 100%;
    height: 100%;
    fill: none;
    stroke: var(--color-text-secondary);
    stroke-width: 3;
    stroke-linecap: round;
    stroke-dasharray: 283; /* 2 * PI * 45 */
    stroke-dashoffset: 283;
    transform: rotate(-90deg);
    transition: stroke-dashoffset 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.progress-circle.active {
    stroke: var(--color-primary);
}

.progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--color-text-primary);
}

/* ========================================
   PARALLAX EFFECTS
======================================== */

.parallax-container {
    position: relative;
    overflow: hidden;
    will-change: transform;
}

.parallax-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 120%; /* Extra height for parallax effect */
    will-change: transform;
    transform-style: preserve-3d;
}

.parallax-background {
    z-index: -3;
}

.parallax-midground {
    z-index: -2;
}

.parallax-foreground {
    z-index: -1;
}

/* Performance optimizations */
.parallax-layer.gpu-accelerated {
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
}

/* ========================================
   REVEAL ANIMATIONS
======================================== */

[data-reveal] {
    opacity: 0;
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

[data-reveal].revealed {
    opacity: 1;
    transform: translateY(0) translateX(0) scale(1) rotate(0) !important;
}

/* Reveal animation variants */
.reveal-fade {
    opacity: 0;
}

.reveal-slide-up {
    opacity: 0;
    transform: translateY(60px);
}

.reveal-slide-down {
    opacity: 0;
    transform: translateY(-60px);
}

.reveal-slide-left {
    opacity: 0;
    transform: translateX(60px);
}

.reveal-slide-right {
    opacity: 0;
    transform: translateX(-60px);
}

.reveal-scale {
    opacity: 0;
    transform: scale(0.8);
}

.reveal-rotate {
    opacity: 0;
    transform: rotate(15deg) scale(0.9);
}

.reveal-clip-path {
    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
    transition: clip-path 1s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.reveal-clip-path.revealed {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}

/* Staggered animations */
.stagger-container > * {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.stagger-container.revealed > *:nth-child(1) { transition-delay: 0.1s; }
.stagger-container.revealed > *:nth-child(2) { transition-delay: 0.2s; }
.stagger-container.revealed > *:nth-child(3) { transition-delay: 0.3s; }
.stagger-container.revealed > *:nth-child(4) { transition-delay: 0.4s; }
.stagger-container.revealed > *:nth-child(5) { transition-delay: 0.5s; }
.stagger-container.revealed > *:nth-child(6) { transition-delay: 0.6s; }
.stagger-container.revealed > *:nth-child(7) { transition-delay: 0.7s; }
.stagger-container.revealed > *:nth-child(8) { transition-delay: 0.8s; }

.stagger-container.revealed > * {
    opacity: 1;
    transform: translateY(0);
}

/* ========================================
   TEXT EFFECTS
======================================== */

/* Typewriter Effect */
.text-typewriter {
    overflow: hidden;
    border-right: 2px solid var(--color-primary);
    white-space: nowrap;
    animation: blink-caret 1s step-end infinite;
}

@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: var(--color-primary); }
}

.text-typewriter.complete {
    border-right: none;
    animation: none;
}

/* Text Scramble Effect */
.text-scramble {
    font-family: var(--font-mono);
    letter-spacing: 0.1em;
}

/* Text Reveal Effect */
.text-reveal span {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.text-reveal.revealed span {
    opacity: 1;
    transform: translateY(0);
}

/* Text Wave Effect */
.text-wave span {
    display: inline-block;
    transition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.text-wave.animated span {
    animation: wave-bounce 0.6s ease-in-out;
}

@keyframes wave-bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

/* Gradient Text Animation */
.text-gradient {
    background: linear-gradient(
        45deg,
        var(--color-primary),
        var(--color-accent),
        var(--color-primary)
    );
    background-size: 200% 200%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-text 3s ease infinite;
}

@keyframes gradient-text {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
}

/* ========================================
   MORPHING ELEMENTS
======================================== */

[data-morph] {
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform, filter, border-radius;
}

/* Morphing card effects */
.morph-card {
    background: var(--color-surface);
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.morph-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
        0 20px 40px rgba(0, 0, 0, 0.1),
        0 0 40px rgba(var(--color-primary-rgb), 0.1);
}

.morph-card.proximity-active {
    transform: perspective(1000px) rotateX(5deg) rotateY(5deg);
    border-radius: 20px;
}

/* Morphing buttons */
.morph-button {
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
    color: white;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
    overflow: hidden;
}

.morph-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s;
}

.morph-button:hover {
    transform: translateY(-2px) scale(1.05);
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(var(--color-primary-rgb), 0.3);
}

.morph-button:hover::before {
    left: 100%;
}

.morph-button.proximity-active {
    border-radius: 24px;
    transform: scale(1.1) rotate(2deg);
}

/* Morphing images */
.morph-image {
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    border-radius: 12px;
    overflow: hidden;
}

.morph-image:hover {
    border-radius: 20px;
    transform: scale(1.05);
    filter: brightness(1.1) contrast(1.1);
}

.morph-image.proximity-active {
    filter: blur(2px) brightness(0.8);
    transform: scale(0.95);
}

.morph-image.proximity-center {
    filter: brightness(1.2) contrast(1.2) saturate(1.2);
    transform: scale(1.08);
    border-radius: 24px;
}

/* ========================================
   CURSOR EFFECTS
======================================== */

.custom-cursor {
    position: fixed;
    width: 20px;
    height: 20px;
    background: var(--color-primary);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: all 0.15s ease;
    transform: translate(-50%, -50%);
}

.custom-cursor.hover {
    width: 40px;
    height: 40px;
    background: var(--color-accent);
    mix-blend-mode: normal;
}

.custom-cursor.click {
    width: 60px;
    height: 60px;
    background: rgba(var(--color-primary-rgb), 0.3);
}

.cursor-trail {
    position: fixed;
    width: 8px;
    height: 8px;
    background: var(--color-primary);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9998;
    opacity: 0.6;
    transform: translate(-50%, -50%);
}

/* Hide default cursor on desktop */
@media (hover: hover) and (pointer: fine) {
    body.custom-cursor-enabled {
        cursor: none;
    }
    
    body.custom-cursor-enabled * {
        cursor: none !important;
    }
}

/* ========================================
   BACKGROUND EFFECTS
======================================== */

.animated-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -10;
    opacity: 0.05;
}

.background-particles {
    position: absolute;
    width: 100%;
    height: 100%;
}

.particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--color-primary);
    border-radius: 50%;
    opacity: 0.6;
    animation: float 6s ease-in-out infinite;
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
        opacity: 0.6;
    }
    50% {
        transform: translateY(-20px) rotate(180deg);
        opacity: 1;
    }
}

.particle:nth-child(odd) {
    animation-delay: -2s;
    animation-duration: 8s;
}

.particle:nth-child(even) {
    animation-delay: -4s;
    animation-duration: 10s;
}

/* Geometric background */
.geometric-background {
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: 
        linear-gradient(45deg, rgba(var(--color-primary-rgb), 0.03) 25%, transparent 25%),
        linear-gradient(-45deg, rgba(var(--color-primary-rgb), 0.03) 25%, transparent 25%),
        linear-gradient(45deg, transparent 75%, rgba(var(--color-primary-rgb), 0.03) 75%),
        linear-gradient(-45deg, transparent 75%, rgba(var(--color-primary-rgb), 0.03) 75%);
    background-size: 60px 60px;
    background-position: 0 0, 0 30px, 30px -30px, -30px 0px;
    animation: geometric-move 20s linear infinite;
}

@keyframes geometric-move {
    0% { background-position: 0 0, 0 30px, 30px -30px, -30px 0px; }
    100% { background-position: 60px 60px, 60px 90px, 90px 30px, 30px 60px; }
}

/* ========================================
   SCROLL SNAP
======================================== */

.scroll-snap-container {
    scroll-snap-type: y mandatory;
    overflow-y: scroll;
    height: 100vh;
}

.scroll-snap-section {
    scroll-snap-align: start;
    min-height: 100vh;
}

/* ========================================
   STICKY ELEMENTS
======================================== */

.sticky-nav {
    position: sticky;
    top: 0;
    z-index: 100;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
}

.sticky-nav.scrolled {
    background: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
}

.sticky-sidebar {
    position: sticky;
    top: 2rem;
    height: fit-content;
}

/* ========================================
   PERFORMANCE OPTIMIZATIONS
======================================== */

.scroll-animations-paused * {
    animation-play-state: paused !important;
    transition: none !important;
}

/* GPU acceleration hints */
.gpu-accelerated {
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
}

/* Will-change optimizations */
.will-change-transform {
    will-change: transform;
}

.will-change-opacity {
    will-change: opacity;
}

.will-change-filter {
    will-change: filter;
}

/* ========================================
   REDUCED MOTION
======================================== */

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
    
    .parallax-layer {
        transform: none !important;
    }
    
    .custom-cursor,
    .cursor-trail {
        display: none !important;
    }
    
    .particle {
        animation: none !important;
    }
}

/* ========================================
   RESPONSIVE DESIGN
======================================== */

@media (max-width: 768px) {
    .section-progress-indicators {
        display: none;
    }
    
    .scroll-progress {
        height: 3px;
    }
    
    .custom-cursor,
    .cursor-trail {
        display: none;
    }
    
    .parallax-layer {
        transform: none !important;
    }
    
    [data-morph] {
        transition: none;
    }
    
    .morph-card:hover {
        transform: none;
    }
    
    .morph-button:hover {
        transform: scale(1.02);
    }
}

@media (max-width: 480px) {
    .circular-progress {
        width: 60px;
        height: 60px;
    }
    
    .progress-text {
        font-size: 0.75rem;
    }
    
    .text-typewriter {
        font-size: 0.9em;
    }
    
    [data-reveal] {
        transition-duration: 0.4s;
    }
}

/* ========================================
   DARK THEME SUPPORT
======================================== */

[data-theme="dark"] .scroll-progress {
    background: rgba(0, 0, 0, 0.2);
}

[data-theme="dark"] .section-indicator {
    border-color: var(--color-text-secondary);
}

[data-theme="dark"] .sticky-nav {
    background: rgba(0, 0, 0, 0.9);
}

[data-theme="dark"] .sticky-nav.scrolled {
    background: rgba(0, 0, 0, 0.95);
    box-shadow: 0 2px 20px rgba(255, 255, 255, 0.1);
}

/* ========================================
   ACCESSIBILITY
======================================== */

.scroll-indicator[aria-label] {
    position: relative;
}

.scroll-indicator[aria-label]:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
}

.screen-reader-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .scroll-progress-bar {
        background: currentColor;
    }
    
    .section-indicator {
        border-width: 3px;
    }
    
    .particle {
        background: currentColor;
        opacity: 1;
    }
}